{"version":3,"sources":["components/Navbar.tsx","App.tsx","utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PeopleTable.tsx","api.ts","components/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","Navbar","search","useLocation","className","role","to","App","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","PeopleFilters","setSearchParams","query","get","sex","centuries","getAll","setSearchWith","handleSexChange","newSex","onClick","onChange","event","target","type","placeholder","map","century","includes","filter","ch","length","Loader","getParent","name","arr","find","person","PeopleTable","peoples","selectedPersonSlug","useParams","personSlug","useState","filteredPeoples","setFilteredPeoples","sortedPeoples","setSortedPeoples","sortField","order","handleSortSpan","title","sortBy","obj","sort","classForArrow","useEffect","newPeoples","i","lowerQuery","toLowerCase","lowerName","lowerFatherName","fatherName","lowerMotherName","motherName","bornCentury","Math","ceil","born","handleFilterChange","prev","name1","name2","localeCompare","a","b","slug","died","mother","father","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","setPeoples","isLoading","setIsLoading","errorMessage","setErrorMessage","getPeoples","peopleService","peopleFromServer","catch","finally","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b76a61f7.chunk.js","sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => (\n  classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  })\n);\n\nexport const Navbar = () => {\n  const { search } = useLocation();\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            to={`/people${search}`}\n            className={getLinkClass}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\nexport const SearchLink: React.FC<Props> = ({\n  children,\n  params,\n  ...props\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props}\n    >\n      {children}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { SearchLink } from './SearchLink';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || 'All';\n  const centuries = searchParams.getAll('centuries') || [];\n\n  // eslint-disable-next-line\n  function setSearchWith(params: any) {\n    const search = getSearchWith(searchParams, params);\n\n    setSearchParams(search);\n  }\n\n  function handleSexChange(newSex: string) {\n    const params = new URLSearchParams(searchParams);\n\n    params.set('sex', newSex);\n    setSearchParams(params);\n  }\n\n  function toggleCentyries(ch: string) {\n    let newCentyries;\n\n    if (centuries.includes(ch)) {\n      newCentyries = centuries.filter(century => century !== ch);\n    } else {\n      newCentyries = [...centuries, ch];\n    }\n\n    setSearchWith({ centuries: newCentyries });\n  }\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchWith({ query: event.target.value || null });\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          params={{ sex: null }}\n          className={classNames({\n            'is-active': sex === 'All',\n          })}\n          onClick={() => handleSexChange('All')}\n        >\n          All\n        </SearchLink>\n\n        <SearchLink\n          params={{ sex: 'm' }}\n          className={classNames({\n            'is-active': sex === 'm',\n          })}\n          onClick={() => handleSexChange('Male')}\n        >\n          Male\n        </SearchLink>\n\n        <SearchLink\n          params={{ sex: 'f' }}\n          className={classNames({\n            'is-active': sex === 'f',\n          })}\n          onClick={() => handleSexChange('Female')}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            onChange={handleQueryChange}\n            value={query}\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {['16', '17', '18', '19', '20'].map(century => (\n              <SearchLink\n                params={{\n                  centuries: centuries.includes(century)\n                    ? centuries.filter(ch => century !== ch)\n                    : [...centuries, century],\n                }}\n                data-cy=\"century\"\n                key={century}\n                onClick={() => toggleCentyries(century)}\n                className={classNames('button mr-1', {\n                  'is-info': centuries.includes(century),\n                })}\n              >\n                {century}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              params={{ centuries: null }}\n              data-cy=\"centuryALL\"\n              className={classNames('button', {\n                'is-success': !centuries.length,\n                'is-success is-outlined': centuries.length,\n              })}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          params={{\n            centuries: null,\n            sex: null,\n            query: null,\n          }}\n          className=\"button is-link is-outlined is-fullwidth\"\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import {\n  NavLink,\n  useParams,\n  useSearchParams,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { Person } from '../types';\nimport { SearchLink } from './SearchLink';\n\ntype Props = {\n  peoples: Person[],\n};\n\ntype Obj = {\n  sort?: string | null,\n  order?: string | null,\n};\n\nfunction getParent(name: string | null, arr: Person[]) {\n  return arr.find(person => person.name === name);\n}\n\nexport const PeopleTable: React.FC<Props> = ({ peoples }) => {\n  const { personSlug } = useParams();\n  const selectedPersonSlug = personSlug;\n  const [params] = useSearchParams();\n  const [filteredPeoples, setFilteredPeoples] = useState<Person[]>(peoples);\n  const [sortedPeoples, setSortedPeoples] = useState<Person[]>(filteredPeoples);\n  const sortField = params.get('sort');\n  const order = params.get('order');\n\n  const sortTable = () => {\n    if (!sortField) {\n      setSortedPeoples(filteredPeoples);\n    }\n\n    if (sortField === 'name' || sortField === 'sex') {\n      if (order === 'desc') {\n        setSortedPeoples(prev => {\n          return [...prev].sort((name1, name2) => {\n            return name2[sortField].localeCompare(name1[sortField]);\n          });\n        });\n      } else {\n        setSortedPeoples(prev => {\n          return [...prev].sort((name1, name2) => {\n            return name1[sortField].localeCompare(name2[sortField]);\n          });\n        });\n      }\n    }\n\n    if (sortField === 'born' || sortField === 'died') {\n      if (order === 'desc') {\n        setSortedPeoples(prev => {\n          return [...prev].sort((a, b) => {\n            return +b[sortField] - +a[sortField];\n          });\n        });\n      } else {\n        setSortedPeoples(prev => {\n          return [...prev].sort((a, b) => {\n            return +a[sortField] - +b[sortField];\n          });\n        });\n      }\n    }\n  };\n\n  const handleFilterChange = () => {\n    let newPeoples = [...peoples];\n    const query = params.get('query');\n    const centuries = params.getAll('centuries');\n    const sex = params.get('sex');\n\n    if (query) {\n      newPeoples = newPeoples.filter((i) => {\n        const lowerQuery = query.toLowerCase();\n        const lowerName = i.name.toLowerCase();\n        const lowerFatherName = i.fatherName?.toLowerCase();\n        const lowerMotherName = i.motherName?.toLowerCase();\n\n        return (\n          lowerName.includes(lowerQuery)\n          || lowerFatherName?.includes(lowerQuery)\n          || lowerMotherName?.includes(lowerQuery)\n        );\n      });\n    }\n\n    if (centuries.length) {\n      newPeoples = newPeoples.filter((person) => {\n        const bornCentury = Math.ceil(person.born / 100);\n\n        return centuries.includes(bornCentury.toString());\n      });\n    }\n\n    if (sex) {\n      newPeoples = newPeoples.filter(person => person.sex === sex);\n    }\n\n    setFilteredPeoples(newPeoples);\n  };\n\n  const handleSortSpan = (title: string, sortBy: string) => {\n    let obj: Obj = { sort: sortBy, order: null };\n    let classForArrow = 'fa-sort';\n\n    if (params.get('sort') === sortBy && !params.get('order')) {\n      obj = { sort: sortBy, order: 'desc' };\n      classForArrow = 'fa-sort-up';\n    }\n\n    if (params.get('sort') === sortBy && params.get('order')) {\n      obj = { sort: null, order: null };\n      classForArrow = 'fa-sort-down';\n    }\n\n    return (\n      <span className=\"is-flex is-flex-wrap-nowrap\">\n        {title}\n        <SearchLink params={obj}>\n          <span className=\"icon\">\n            <i className={`fas ${classForArrow}`} />\n          </span>\n        </SearchLink>\n      </span>\n    );\n  };\n\n  useEffect(() => {\n    handleFilterChange();\n  }, [params]);\n\n  useEffect(() => {\n    sortTable();\n  }, [sortField, order]);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            {(() => handleSortSpan('Name', 'name'))()}\n          </th>\n\n          <th>\n            {(() => handleSortSpan('Sex', 'sex'))()}\n          </th>\n\n          <th>\n            {(() => handleSortSpan('Born', 'born'))()}\n          </th>\n\n          <th>\n            {(() => handleSortSpan('Died', 'died'))()}\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {sortedPeoples.map((person) => {\n          const {\n            name,\n            slug,\n            sex,\n            born,\n            died,\n            motherName,\n            fatherName,\n          } = person;\n          const mother = getParent(motherName, peoples);\n          const father = getParent(fatherName, peoples);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={classNames({\n                'has-background-warning': selectedPersonSlug === slug,\n              })}\n            >\n              <td>\n                <NavLink\n                  to={slug}\n                  className={classNames({\n                    'has-text-danger': sex === 'f',\n                  })}\n                >\n                  {name}\n                </NavLink>\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n\n              {motherName ? (\n                <td>\n                  {mother ? (\n                    <NavLink\n                      className=\"has-text-danger\"\n                      to={`${mother.slug}`}\n                    >\n                      {motherName}\n                    </NavLink>\n                  ) : motherName}\n                </td>\n              ) : (\n                <td>-</td>\n              )}\n\n              {fatherName ? (\n                <td>\n                  {father ? (\n                    <NavLink to={`${father.slug}`}>\n                      {fatherName}\n                    </NavLink>\n                  ) : fatherName}\n                </td>\n              ) : (\n                <td>-</td>\n              )}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types';\nimport * as peopleService from '../api';\n\nexport const PeoplePage = () => {\n  const [peoples, setPeoples] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const getPeoples = () => {\n    return peopleService.getPeople()\n      .then(peopleFromServer => setPeoples(peopleFromServer))\n      .catch(() => setErrorMessage('Something went wrong'))\n      .finally(() => setIsLoading(false));\n  };\n\n  useEffect(() => {\n    getPeoples();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!isLoading && (\n              <PeopleFilters />\n            )}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {errorMessage && (\n                <p data-cy=\"peopleLoadingError\">{errorMessage}</p>\n              )}\n\n              {!isLoading && peoples.length === 0 && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {peoples.length === 0 && !isLoading && (\n                <p>There are no people matching the current search criteria</p>\n              )}\n\n              {!isLoading && (\n                <PeopleTable peoples={peoples} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  Routes,\n  HashRouter as Router,\n} from 'react-router-dom';\nimport { App } from './App';\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<h1 className=\"title\">Home Page</h1>} />\n        <Route path=\"home\" element={<Navigate replace to=\"/\" />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":personSlug?\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}